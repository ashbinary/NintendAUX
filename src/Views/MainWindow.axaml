<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:NintendAUX.ViewModels"
        xmlns:models="clr-namespace:NintendAUX.Models"
        xmlns:converters="using:NintendAUX.Converters"
        xmlns:controls="using:NintendAUX.Views.Controls"
        Width="750" Height="420" CanResize="False"
        x:Class="NintendAUX.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        TransparencyLevelHint="AcrylicBlur"
        ExtendClientAreaToDecorationsHint="True"
        Icon="/Assets/avalonia-logo.ico"
        Title="NintendAUX">

    <Window.Resources>
        <converters:TypeConverter x:Key="TypeConverter" />
        <converters:NodePropertyConverter x:Key="NodePropertyConverter" />
    </Window.Resources>

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="390" />
        </Grid.RowDefinitions>

        <Panel>
            <ExperimentalAcrylicBorder IsHitTestVisible="False">
                <ExperimentalAcrylicBorder.Material>
                    <ExperimentalAcrylicMaterial
                        BackgroundSource="Digger"
                        TintColor="Black"
                        TintOpacity="1"
                        MaterialOpacity="0.65" />
                </ExperimentalAcrylicBorder.Material>
            </ExperimentalAcrylicBorder>

            <Panel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <DockPanel Margin="5">
                        <Menu DockPanel.Dock="Top">
                            <MenuItem Header="_File" FontSize="14">
                                <MenuItem Header="_Open..." Click="OpenFile" FontSize="13" />
                                <MenuItem Header="_Save As...">
                                    <MenuItem x:Name="DecompressedSave" Header="_Decompressed File" FontSize="13" Click="SaveDecompressedFile"
                                              IsEnabled="{Binding FileLoaded}" />
                                    <MenuItem x:Name="CompressedSave" Header="_Compressed File (ZSTD)" FontSize="13" Click="SaveCompressedFile"
                                              IsEnabled="{Binding ArchiveLoaded}" />
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="_Exit" FontSize="13" Click="ExitApplication" />
                            </MenuItem>
                            <MenuItem Header="Edit" Margin="0,0,10,0" FontSize="14">
                                <MenuItem Header="Add New Entry" FontSize="13" Click="AddNewNode"
                                          IsEnabled="{Binding ArchiveLoaded}" />
                                <MenuItem Header="Extract All Entries in File" FontSize="13" Click="ExtractAll"
                                          IsEnabled="{Binding ArchiveLoaded}">
                                    <!-- <MenuItem Header="Extract All To Single Directory"/> To be impl. later -->
                                    <!-- <MenuItem Header="Extract To Separate Folders"/> -->
                                </MenuItem>
                                <MenuItem Header="Sort Entries Alphabetically" FontSize="13" Click="SortNodes"
                                          IsEnabled="{Binding ArchiveLoaded}" />
                                <Separator />
                                <MenuItem Header="_Open ZSTD Dictionary (ToTK)" FontSize="13" Click="LoadTotkDict" />
                            </MenuItem>
                        </Menu>
                    </DockPanel>

                    <TextBlock Grid.Column="1" Text="{Binding Version}"
                               IsHitTestVisible="False"
                               FontSize="14"
                               HorizontalAlignment="Center"
                               Foreground="DarkGray"
                               VerticalAlignment="Top"
                               TextWrapping="WrapWithOverflow" Margin="0, 6, 0, 0" />
                </Grid>
            </Panel>
        </Panel>


        <Grid x:Name="AllArea" Grid.Row="1" DragDrop.AllowDrop="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="390" />
            </Grid.RowDefinitions>

            <TreeView Margin="5,5,2.5,5" x:Name="TreeView" ItemsSource="{Binding Nodes}"
                      SelectedItem="{Binding SelectedNode, Mode=TwoWay}" SelectionChanged="ChangeDisplayedInfo">
                <TreeView.DataTemplates>
                    <TreeDataTemplate DataType="models:BARSEntryNode" ItemsSource="{Binding SubNodes}">
                        <StackPanel x:Name="PanelThing">
                            <TextBox x:Name="RenameBox" IsVisible="False" KeyDown="HideTextBox" />
                            <TextBlock Text="{Binding Title}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete Entry" Click="DeleteBarsEntry" />
                                        <MenuItem Header="Rename Entry" Click="RenameBarsEntry" />
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </StackPanel>
                    </TreeDataTemplate>
                    <TreeDataTemplate DataType="models:BWAVNode" ItemsSource="{Binding Channels}">
                        <TextBlock Text="{Binding Title}">
                            <TextBlock.ContextMenu>
                                <ContextMenu x:Name="BwavContextMenu">
                                    <MenuItem Header="Extract (.bwav)" Click="ExtractAsBwav"
                                              IsVisible="{Binding InBarsFile}" />
                                    <MenuItem Header="Extract (.wav)" Click="ExtractAsWav" />
                                    <Separator />
                                    <MenuItem Header="Replace" Click="ReplaceBwav" 
                                              IsVisible="{Binding InBarsFile}" />
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </TreeDataTemplate>
                    <TreeDataTemplate DataType="models:BWAVChannelNode">
                        <TextBlock Text="{Binding Title}">
                            <TextBlock.ContextMenu>
                                <ContextMenu x:Name="DataContextMenu">
                                    <MenuItem Header="Extract Channel (.wav)" Click="ExtractAsWav" />
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </TreeDataTemplate>
                    <TreeDataTemplate DataType="models:BWAVStereoChannelNode" ItemsSource="{Binding Channels}">
                        <TextBlock Text="{Binding Title}">
                            <TextBlock.ContextMenu>
                                <ContextMenu x:Name="DataContextMenu">
                                    <MenuItem Header="Extract Stereo Channel (.wav)" Click="ExtractAsWav" />
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </TreeDataTemplate>
                    <TreeDataTemplate DataType="models:AMTANode">
                        <TextBlock Text="{Binding Title}">
                            <TextBlock.ContextMenu>
                                <ContextMenu x:Name="DataContextMenu">
                                    <MenuItem Header="Extract (.bameta)" Click="ExtractAsBameta" />
                                    <MenuItem Header="Replace" Click="ReplaceBameta" />
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </TreeDataTemplate>
                </TreeView.DataTemplates>
            </TreeView>

            <Border Grid.Column="1" Background="#404040" Margin="2.5,5,5,5" Padding="10">
                <StackPanel x:Name="NodeInfoPanel" Height="0">
                    <!-- For some reason, setting the stack panel height to 0 fixes the centering, so I set the stack panel height
                    to 0, then in OpenFile I reset it to 380 to properly show the data-->
                    <TextBlock Text="Load a .bars or .bwav file to continue!"
                               FontSize="14"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               TextWrapping="Wrap"
                               IsVisible="{Binding !FileLoaded}" />

                    <!-- BARS Entry Node content -->
                    <StackPanel
                        IsVisible="{Binding SelectedNode, Converter={StaticResource TypeConverter}, ConverterParameter={x:Type models:BARSEntryNode}}">
                        <controls:InfoBlock Label="Entry Name" Value="{Binding SelectedNode.Title}" />
                        <controls:InfoBlock
                            Label="Metadata File Offset"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.AmtaOffset.AsHex}" />
                        <controls:InfoBlock
                            Label="Song File Offset"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.BwavOffset.AsHex}" />
                    </StackPanel>

                    <!-- BWAV Node content -->
                    <StackPanel
                        IsVisible="{Binding SelectedNode, Converter={StaticResource TypeConverter}, ConverterParameter={x:Type models:BWAVNode}}">
                        <controls:InfoBlock
                            Label="Prefetch File?"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.IsPrefetch}" />
                        <controls:InfoBlock
                            Label="Number of Channels"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.ChannelCount}" />
                    </StackPanel>

                    <!-- BWAV Channel Node content -->
                    <StackPanel
                        IsVisible="{Binding SelectedNode, Converter={StaticResource TypeConverter}, ConverterParameter={x:Type models:BWAVChannelNode}}">
                        <controls:InfoBlock
                            Label="Channel Encoding"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.Encoding}" />
                        <controls:InfoBlock
                            Label="Channel Pan"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.ChannelPan}" />
                        <controls:InfoBlock
                            Label="Sample Count"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.SampleCount}" />
                        <controls:InfoBlock
                            Label="Sample Rate"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.SampleRate}" />
                        <!-- <controls:InfoBlock  -->
                        <!--     Label="Loop Point" -->
                        <!--     Value="{Binding SelectedNode,  -->
                        <!--             Converter={StaticResource NodePropertyConverter},  -->
                        <!--             ConverterParameter=Data.LoopEnd}"/> -->
                    </StackPanel>

                    <!-- AMTA Node content -->
                    <StackPanel
                        IsVisible="{Binding SelectedNode, Converter={StaticResource TypeConverter}, ConverterParameter={x:Type models:AMTANode}}">
                        <controls:InfoBlock
                            Label="Marker Table Offset"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.MarkerOffset.AsHex}" />
                        <controls:InfoBlock
                            Label="MINF Offset"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.MinfOffset.AsHex}" />
                        <controls:InfoBlock
                            Label="Tag Offset"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.TagOffset.AsHex}" />
                        <controls:InfoBlock
                            Label="Number of Sources"
                            Value="{Binding SelectedNode, 
                                    Converter={StaticResource NodePropertyConverter}, 
                                    ConverterParameter=Data.SourceCount}" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>

</Window>